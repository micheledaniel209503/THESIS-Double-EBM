function alpha = alpha_sol(h, rc, params)
% soluzione constraint su alpha da Wolfram Mathematica
ro = params.ro;
ri = params.ri;
h0 = params.h0;

alpha = (sqrt(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2).*(-15.*(ri + ro).^2 + ...
    15.^(2./3).*((1./(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2)).*(18.*h.*rc.^2.*ri.^2 - 18.*h0.*rc.^2.*ri.^2 + 18.*h.*rc.*ri.^3 - 18.*h0.*rc.*ri.^3 + 36.*h.*rc.^2.*ri.*ro - ...
        36.*h0.*rc.^2.*ri.*ro + 36.*h.*rc.*ri.^2.*ro - 36.*h0.*rc.*ri.^2.*ro - 18.*h.*ri.^3.*ro + 18.*h0.*ri.^3.*ro + 18.*h.*rc.^2.*ro.^2 - 18.*h0.*rc.^2.*ro.^2 + ...
        18.*h.*rc.*ri.*ro.^2 - 18.*h0.*rc.*ri.*ro.^2 - 54.*h.*ri.^2.*ro.^2 + 54.*h0.*ri.^2.*ro.^2 - 54.*h.*ri.*ro.^3 + 54.*h0.*ri.*ro.^3 - 18.*h.*ro.^4 + 18.*h0.*ro.^4 + ...
        sqrt(3).*(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2).*sqrt((1./(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2).^2).* ...
           ((ri + ro).^4.*(5.*h.^4.*(ri + ro).^2 + 20.*h.^3.*h0.*(ri + ro).^2 + 5.*h0.^4.*(ri + ro).^2 + 80.*(ri - ro).^4.*(ri + ro).^2 + ...
             4.*h.*h0.*(-54.*rc.^4 - 108.*rc.^3.*ri + 108.*rc.*ri.*ro.*(ri + ro) + (ri + ro).^2.*(5.*h0.^2 + 20.*ri.^2 - 40.*ri.*ro - 34.*ro.^2) - 54.*rc.^2.* ...
                (ri.^2 - 2.*ri.*ro - 2.*ro.^2)) + 4.*h0.^2.*(27.*rc.^4 + 54.*rc.^3.*ri - 54.*rc.*ri.*ro.*(ri + ro) + 27.*rc.^2.*(ri.^2 - 2.*ri.*ro - 2.*ro.^2) + ...
               (ri + ro).^2.*(10.*ri.^2 - 20.*ri.*ro + 37.*ro.^2)) + 2.*h.^2.*(54.*rc.^4 + 108.*rc.^3.*ri - 108.*rc.*ri.*ro.*(ri + ro) + 54.*rc.^2.* ...
                (ri.^2 - 2.*ri.*ro - 2.*ro.^2) + (ri + ro).^2.*(15.*h0.^2 + 20.*ri.^2 - 40.*ri.*ro + 74.*ro.^2))))))).^(2./3)))./ ...
  (12.*15.^(1./3).*(ri + ro).*((1./(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2)).*(18.*h.*rc.^2.*ri.^2 - 18.*h0.*rc.^2.*ri.^2 + 18.*h.*rc.*ri.^3 - 18.*h0.*rc.*ri.^3 + ...
      36.*h.*rc.^2.*ri.*ro - 36.*h0.*rc.^2.*ri.*ro + 36.*h.*rc.*ri.^2.*ro - 36.*h0.*rc.*ri.^2.*ro - 18.*h.*ri.^3.*ro + 18.*h0.*ri.^3.*ro + 18.*h.*rc.^2.*ro.^2 - ...
      18.*h0.*rc.^2.*ro.^2 + 18.*h.*rc.*ri.*ro.^2 - 18.*h0.*rc.*ri.*ro.^2 - 54.*h.*ri.^2.*ro.^2 + 54.*h0.*ri.^2.*ro.^2 - 54.*h.*ri.*ro.^3 + 54.*h0.*ri.*ro.^3 - 18.*h.*ro.^4 + ...
      18.*h0.*ro.^4 + sqrt(3).*(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2).*sqrt((1./(h.^2 + 2.*h.*h0 + h0.^2 + 4.*(ri - ro).^2).^2).* ...
         ((ri + ro).^4.*(5.*h.^4.*(ri + ro).^2 + 20.*h.^3.*h0.*(ri + ro).^2 + 5.*h0.^4.*(ri + ro).^2 + 80.*(ri - ro).^4.*(ri + ro).^2 + ...
           4.*h.*h0.*(-54.*rc.^4 - 108.*rc.^3.*ri + 108.*rc.*ri.*ro.*(ri + ro) + (ri + ro).^2.*(5.*h0.^2 + 20.*ri.^2 - 40.*ri.*ro - 34.*ro.^2) - ...
             54.*rc.^2.*(ri.^2 - 2.*ri.*ro - 2.*ro.^2)) + 4.*h0.^2.*(27.*rc.^4 + 54.*rc.^3.*ri - 54.*rc.*ri.*ro.*(ri + ro) + 27.*rc.^2.*(ri.^2 - 2.*ri.*ro - 2.*ro.^2) + ...
             (ri + ro).^2.*(10.*ri.^2 - 20.*ri.*ro + 37.*ro.^2)) + 2.*h.^2.*(54.*rc.^4 + 108.*rc.^3.*ri - 108.*rc.*ri.*ro.*(ri + ro) + ...
             54.*rc.^2.*(ri.^2 - 2.*ri.*ro - 2.*ro.^2) + (ri + ro).^2.*(15.*h0.^2 + 20.*ri.^2 - 40.*ri.*ro + 74.*ro.^2))))))).^(1./3));
end